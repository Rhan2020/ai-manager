version: '3.8'

services:
  # AI任务管理器主应用
  ai-manager:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    volumes:
      - ai-manager-data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - ai-manager-network
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-manager.rule=Host(`ai-manager.yourdomain.com`)"
      - "traefik.http.routers.ai-manager.tls=true"
      - "traefik.http.routers.ai-manager.tls.certresolver=letsencrypt"

  # Redis用于缓存和会话存储
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - ai-manager-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-yourRedisPassword123}

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - ai-manager-network
    depends_on:
      - ai-manager

  # Traefik反向代理 (可选，替代nginx)
  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    restart: unless-stopped
    networks:
      - ai-manager-network
    profiles:
      - traefik

volumes:
  ai-manager-data:
    driver: local
  redis-data:
    driver: local

networks:
  ai-manager-network:
    driver: bridge